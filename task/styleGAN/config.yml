task:
  name: "styleGAN"
  categories: "generative" # [generative, predictive - involve detection, segmentation blah blah]
  metrics:
    train: ["loss"]
    eval: []
  log:
    log_step: 100
    log_dir: "./task/styleGAN/logs"
    save: "./task/styleGAN/ckpts"
  device: 'cuda'

data:
  format: "ffhq-gan" # Format
  module: "data.base.FFHQ_GAN"
  source: "C:/Users/minhh/source/FFHQ" # Path to data
  train_factor: 1.
  train_batch_size: 8
  test_batch_size: 16
  image_size: 128
  num_workers: 2
  policy: default

model:
  module: "models.gans.styleGAN.StyleGAN_`" # model arch
  loss_module: models.gans.losses.GANLoss
  pretrain: None
  device: cuda
  generator:
    resolution: 128
    latent_dim: 512
    dlatent_dim: 512
    conditional: False
    n_classes: 0
    optimizer:
      module: "adam" # optimizer module
      lr: 0.001
      scheduler: 
        module: "ReduceLROnPlateau" # Lr scheduler module
        patience: 5
        factor: 0.
  
  discriminator:
    num_channels: 3
    resolution: 128
    conditional: False
    n_classes: 0
    optimizer:
      module: "adam" # optimizer module
      lr: 0.001
      scheduler: 
        module: "ReduceLROnPlateau" # Lr scheduler module
        patience: 5
        factor: 0.
  
  log: False
  criterion: BCELoss # Model criterion
  save: "./task/styleGAN/ckpts"
  taskname: "styleGAN"
  metric:
    train:
      disc_loss: float
      gen_loss: float
    eval:
      _: float